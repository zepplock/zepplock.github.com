{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Content","ArticleDate","Article","MarkerHeader","ReadingTime","Tag","IndexPage","data","title","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","Date","map","key","id","to","path","css","date","fields","readingTime","text","tags","tag","href","excerpt","query"],"mappings":"oNAQMA,EAAO,2HAMPC,EAAW,+FAKXC,EAAO,sIAOPC,EAAY,iOAWZC,EAAW,+FAKXC,EAAG,85B,+DAqFMC,UArCG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,aACX,YAACR,EAAD,KACE,kCACCO,EAAKE,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAEjC,OADa,IAAIG,KAAKH,GACR,IAAIG,QAEnBC,KAAI,gBAAGH,EAAH,EAAGA,KAAH,OACH,YAACX,EAAD,CAASe,IAAKJ,EAAKK,IACjB,YAAC,OAAD,CACEC,GAAIN,EAAKC,YAAYM,KACrBC,IAAG,GAKH,YAAClB,EAAD,KAAeU,EAAKC,YAAYN,MAAhC,KACA,uBACE,YAACP,EAAD,KAAcY,EAAKC,YAAYQ,MAC/B,YAAClB,EAAD,WAAiBS,EAAKU,OAAOC,YAAYC,MAF3C,UAIIZ,EAAKC,YAAYY,MAAQ,IAAIV,KAAI,SAAAW,GAAG,OAAI,YAACtB,EAAD,KAAK,iBAAGuB,KAAK,qBAAqBD,QAE9E,qBAAId,EAAKgB,iBAWlB,IAAMC,EAAK","file":"component---src-pages-index-js-9e932f5224625d5eac15.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst Article = styled.div`\n  padding: 10px;\n  &:hover {\n    box-shadow: 0px 0px 30px 0px rgba(0,0,0,0.2);\n  }\n`\n\nconst MarkerHeader = styled.h4`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(240, 243, 189, 0.15),\n    rgba(240, 243, 189, 0.8) 100%,\n    rgba(240, 243, 189, 0.25)\n  );\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst Tag = styled.span`\na {    \n  display: inline-block;\n  height: 16px;\n  line-height: 16px;\n  position: relative;\n  margin: 0 16px 8px 0;\n  padding: 0 10px 0 12px;\n  background: #777;    \n  -webkit-border-bottom-right-radius: 3px;    \n  border-bottom-right-radius: 3px;\n  -webkit-border-top-right-radius: 3px;    \n  border-top-right-radius: 3px;\n  -webkit-box-shadow: 0 1px 2px rgba(0,0,0,0.2);\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\n  color: #fff;\n  font-size: 12px;\n  text-decoration: none;\n  text-shadow: 0 1px 2px rgba(0,0,0,0.2);\n  font-weight: bold;\n  }\n  a:before {\n    content: \"\";\n    position: absolute;\n    top:0;\n    left: -12px;\n    width: 0;\n    height: 0;\n    border-color: transparent #777 transparent transparent;\n    border-style: solid;\n    border-width: 8px 12px 8px 0;        \n  }\n  a:after {\n    content: \"\";\n    position: absolute;\n    top: 6px;\n    left: 1px;\n    float: left;\n    width: 5px;\n    height: 5px;\n    -webkit-border-radius: 50%;\n    border-radius: 50%;\n    background: #fff;\n    -webkit-box-shadow: -1px -1px 2px rgba(0,0,0,0.4);\n    box-shadow: -1px -1px 2px rgba(0,0,0,0.4);\n  }\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Articles\" />\n      <Content>\n        <h2>Articles</h2>\n        {data.allMarkdownRemark.edges\n          .filter(({ node }) => {\n            const rawDate = node.frontmatter.rawDate\n            const date = new Date(rawDate)\n            return date < new Date()\n          })\n          .map(({ node }) => (\n            <Article key={node.id}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n                <div>\n                  <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                  <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  {(node.frontmatter.tags || []).map(tag => <Tag><a href='http://google.com'>{tag}</a></Tag>)}\n                </div>\n                <p>{node.excerpt}</p>\n              </Link>\n            </Article>\n          ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n            tags\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}